class ListNode:
    """
    Класс для представления узла односвязного списка.
    """
    def __init__(self, *args):
        """
        Конструктор узла списка. Может принимать 0, 1 или 2 аргумента.
        """
        if args:  # Если аргументы переданы
            if len(args) == 1:  # Если передан только один аргумент (значение узла)
                self.value = args[0]  # Устанавливаем значение узла
                self.next = None  # Устанавливаем следующий узел в None (конец списка)
            elif len(args) == 2 and isinstance(args[1], ListNode):  # Если переданы значение и следующий узел
                self.value = args[0]  # Устанавливаем значение узла
                self.next = args[1]  # Устанавливаем следующий узел
            else:  # Если передан некорректный набор аргументов
                raise TypeError()  # Выбрасываем исключение TypeError
        # Если аргументы не переданы, создаётся пустой узел (self.value и self.next будут None)

    def __str__(self):
        """
        Метод для преобразования узла в строку.
        """
        return f"({self.value}) -> {self.next}"  # Возвращает строку вида "(значение) -> следующий_узел"

    def __eq__(self, n2):
        """
        Метод для сравнения двух узлов на равенство.
        """
        if isinstance(n2, ListNode):  # Проверяем, является ли n2 узлом списка
            return self.value == n2.value and self.next == n2.next  # Сравниваем значения и следующие узлы
        else:
            return False  # Если n2 не узел списка, возвращаем False

    def __ne__(self, n2):
        """
        Метод для сравнения двух узлов на неравенство.
        """
        return not self == n2  # Инвертируем результат сравнения на равенство